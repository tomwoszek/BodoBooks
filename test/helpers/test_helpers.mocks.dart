// Mocks generated by Mockito 5.4.4 from annotations
// in bodobox/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:bodobox/services/book_service.dart' as _i22;
import 'package:bodobox/services/device_service.dart' as _i10;
import 'package:bodobox/services/house_hold_service.dart' as _i19;
import 'package:bodobox/services/master_service.dart' as _i21;
import 'package:bodobox/services/prefs_service.dart' as _i18;
import 'package:bodobox/services/request_service.dart' as _i13;
import 'package:bodobox/services/theme_service.dart' as _i20;
import 'package:bodobox/services/user_servie_service.dart' as _i8;
import 'package:bodobox/utils/enums.dart' as _i12;
import 'package:bodobox/utils/models/book_model.dart' as _i14;
import 'package:bodobox/utils/models/device_model.dart' as _i11;
import 'package:bodobox/utils/models/page_model.dart' as _i15;
import 'package:bodobox/utils/models/server_callback_model.dart' as _i2;
import 'package:bodobox/utils/models/user_model.dart' as _i9;
import 'package:cloud_firestore/cloud_firestore.dart' as _i17;
import 'package:flutter/material.dart' as _i3;
import 'package:image_picker/image_picker.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:stacked_services/stacked_services.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServerCallBack_0 extends _i1.SmartFake
    implements _i2.ServerCallBack {
  _FakeServerCallBack_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_1 extends _i1.SmartFake implements _i3.ThemeData {
  _FakeThemeData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeEdgeInsets_2 extends _i1.SmartFake implements _i3.EdgeInsets {
  _FakeEdgeInsets_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i4.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i3.GlobalKey<_i3.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i3.GlobalKey<_i3.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i4.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<T?>? navigateWithTransition<T>(
    _i3.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i3.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? replaceWithTransition<T>(
    _i3.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i3.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i4.Transition? transitionClass,
    _i4.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void popUntil(
    _i3.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i3.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? navigateToView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i3.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i4.Transition? transition,
    _i4.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i3.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? clearStackAndShowView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? clearTillFirstAndShowView<T>(
    _i3.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);

  @override
  _i6.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i3.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i6.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i4.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i4.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i4.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.SheetResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<dynamic>?>);

  @override
  _i6.Future<_i4.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i6.Future<_i4.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.SheetResponse<T>?>.value(),
      ) as _i6.Future<_i4.SheetResponse<T>?>);

  @override
  void completeSheet(_i4.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i4.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i4.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i3.Widget Function(
      _i3.BuildContext,
      _i4.DialogRequest<dynamic>,
      dynamic Function(_i4.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i7.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i7.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);

  @override
  _i6.Future<_i4.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i7.Color? barrierColor = const _i7.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i6.Future<_i4.DialogResponse<T>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<T>?>);

  @override
  _i6.Future<_i4.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i7.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i7.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i4.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i6.Future<_i4.DialogResponse<dynamic>?>.value(),
      ) as _i6.Future<_i4.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i4.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserServieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserServieService extends _i1.Mock implements _i8.UserServieService {
  @override
  _i6.Future<bool> registerUser(_i9.BodoboxUser? user) => (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [user],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> signInUser(_i9.BodoboxUser? user) => (super.noSuchMethod(
        Invocation.method(
          #signInUser,
          [user],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i9.BodoboxUser?> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i6.Future<_i9.BodoboxUser?>.value(),
        returnValueForMissingStub: _i6.Future<_i9.BodoboxUser?>.value(),
      ) as _i6.Future<_i9.BodoboxUser?>);

  @override
  _i6.Future<bool> updateName(
    String? name,
    _i9.BodoboxUser? user,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateName,
          [
            name,
            user,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> updatePassword(_i9.BodoboxUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [user],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [DeviceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceService extends _i1.Mock implements _i10.DeviceService {
  @override
  _i6.Future<_i11.Device?> getDeviceImei() => (super.noSuchMethod(
        Invocation.method(
          #getDeviceImei,
          [],
        ),
        returnValue: _i6.Future<_i11.Device?>.value(),
        returnValueForMissingStub: _i6.Future<_i11.Device?>.value(),
      ) as _i6.Future<_i11.Device?>);

  @override
  _i6.Future<bool> deleteDevice(
    _i9.BodoboxUser? user,
    String? deviceId,
    _i12.DeviceIndex? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDevice,
          [
            user,
            deviceId,
            index,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> isDeviceRegistered(_i9.BodoboxUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #isDeviceRegistered,
          [user],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [RequestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestService extends _i1.Mock implements _i13.RequestService {
  @override
  _i6.Future<_i2.ServerCallBack> registerUser(_i9.BodoboxUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [user],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerUser,
            [user],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerUser,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> signInUser(_i9.BodoboxUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInUser,
          [user],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #signInUser,
            [user],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #signInUser,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i9.BodoboxUser?> getUserData(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [userId],
        ),
        returnValue: _i6.Future<_i9.BodoboxUser?>.value(),
        returnValueForMissingStub: _i6.Future<_i9.BodoboxUser?>.value(),
      ) as _i6.Future<_i9.BodoboxUser?>);

  @override
  _i6.Future<_i2.ServerCallBack> updateSharingMode(
    _i9.BodoboxUser? user,
    bool? mode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSharingMode,
          [
            user,
            mode,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updateSharingMode,
            [
              user,
              mode,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updateSharingMode,
            [
              user,
              mode,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> updateName(
    _i9.BodoboxUser? user,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateName,
          [
            user,
            name,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updateName,
            [
              user,
              name,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updateName,
            [
              user,
              name,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> updatePassword(_i9.BodoboxUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [user],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updatePassword,
            [user],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #updatePassword,
            [user],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getHousHoldIpAdress() => (super.noSuchMethod(
        Invocation.method(
          #getHousHoldIpAdress,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<_i2.ServerCallBack> registerHouseHold(
    _i9.BodoboxUser? user,
    String? ipAdress,
    List<dynamic>? sharingBooks,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerHouseHold,
          [
            user,
            ipAdress,
            sharingBooks,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerHouseHold,
            [
              user,
              ipAdress,
              sharingBooks,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerHouseHold,
            [
              user,
              ipAdress,
              sharingBooks,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> deleteHouseHold(dynamic ipAdress) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteHouseHold,
          [ipAdress],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteHouseHold,
            [ipAdress],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteHouseHold,
            [ipAdress],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<List<dynamic>> getHousBooks(String? ipAdress) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHousBooks,
          [ipAdress],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);

  @override
  _i6.Future<_i2.ServerCallBack> registerSecondDevice(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerSecondDevice,
          [userId],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerSecondDevice,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerSecondDevice,
            [userId],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> registerFirstDevice(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerFirstDevice,
          [userId],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerFirstDevice,
            [userId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerFirstDevice,
            [userId],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> deleteDevice(
    _i9.BodoboxUser? user,
    String? deviceId,
    _i12.DeviceIndex? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteDevice,
          [
            user,
            deviceId,
            index,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteDevice,
            [
              user,
              deviceId,
              index,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteDevice,
            [
              user,
              deviceId,
              index,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> registerBook(_i14.BodoBook? bodoBook) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerBook,
          [bodoBook],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerBook,
            [bodoBook],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #registerBook,
            [bodoBook],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> uploadPage(
    String? bookId,
    _i15.BodoBookPage? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPage,
          [
            bookId,
            page,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadPage,
            [
              bookId,
              page,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadPage,
            [
              bookId,
              page,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<String?> uploadImage(
    _i16.XFile? imageFile,
    String? bucketId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [
            imageFile,
            bucketId,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<_i2.ServerCallBack> uploadAudio(
    String? audioFilePath,
    String? audioName,
    String? bucketId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAudio,
          [
            audioFilePath,
            audioName,
            bucketId,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadAudio,
            [
              audioFilePath,
              audioName,
              bucketId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadAudio,
            [
              audioFilePath,
              audioName,
              bucketId,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> regsiterAudio(
    String? bookId,
    String? collectionId,
    String? audioTitle,
    String? audioLink,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #regsiterAudio,
          [
            bookId,
            collectionId,
            audioTitle,
            audioLink,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #regsiterAudio,
            [
              bookId,
              collectionId,
              audioTitle,
              audioLink,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #regsiterAudio,
            [
              bookId,
              collectionId,
              audioTitle,
              audioLink,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<int?> getPageIndex(String? bookId) => (super.noSuchMethod(
        Invocation.method(
          #getPageIndex,
          [bookId],
        ),
        returnValue: _i6.Future<int?>.value(),
        returnValueForMissingStub: _i6.Future<int?>.value(),
      ) as _i6.Future<int?>);

  @override
  _i6.Future<int> getUserIndex() => (super.noSuchMethod(
        Invocation.method(
          #getUserIndex,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getBookIndex() => (super.noSuchMethod(
        Invocation.method(
          #getBookIndex,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getPages(
          String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPages,
          [bookId],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ServerCallBack> uploadBook(String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadBook,
          [bookId],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadBook,
            [bookId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #uploadBook,
            [bookId],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getBooks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBooks,
          [],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Future<_i2.ServerCallBack> deleteBook(String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBook,
          [bookId],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteBook,
            [bookId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #deleteBook,
            [bookId],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Future<_i2.ServerCallBack> buyBook(
    String? userId,
    String? bookId,
    bool? bundle,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #buyBook,
          [
            userId,
            bookId,
            bundle,
          ],
        ),
        returnValue: _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #buyBook,
            [
              userId,
              bookId,
              bundle,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i2.ServerCallBack>.value(_FakeServerCallBack_0(
          this,
          Invocation.method(
            #buyBook,
            [
              userId,
              bookId,
              bundle,
            ],
          ),
        )),
      ) as _i6.Future<_i2.ServerCallBack>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getAudios(
          String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudios,
          [bookId],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);
}

/// A class which mocks [PrefsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrefsService extends _i1.Mock implements _i18.PrefsService {
  @override
  _i6.Future<dynamic> setUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i6.Future<dynamic>.value(),
        returnValueForMissingStub: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<bool> deletUserId() => (super.noSuchMethod(
        Invocation.method(
          #deletUserId,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [HouseHoldService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHouseHoldService extends _i1.Mock implements _i19.HouseHoldService {
  @override
  _i6.Future<bool> changeMode(
    bool? mode,
    _i9.BodoboxUser? user,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeMode,
          [
            mode,
            user,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<dynamic>> getBooks() => (super.noSuchMethod(
        Invocation.method(
          #getBooks,
          [],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i20.ThemeService {
  @override
  _i3.ThemeData get appThemeDark => (super.noSuchMethod(
        Invocation.getter(#appThemeDark),
        returnValue: _FakeThemeData_1(
          this,
          Invocation.getter(#appThemeDark),
        ),
        returnValueForMissingStub: _FakeThemeData_1(
          this,
          Invocation.getter(#appThemeDark),
        ),
      ) as _i3.ThemeData);

  @override
  _i3.EdgeInsets get pagePadding => (super.noSuchMethod(
        Invocation.getter(#pagePadding),
        returnValue: _FakeEdgeInsets_2(
          this,
          Invocation.getter(#pagePadding),
        ),
        returnValueForMissingStub: _FakeEdgeInsets_2(
          this,
          Invocation.getter(#pagePadding),
        ),
      ) as _i3.EdgeInsets);
}

/// A class which mocks [MasterService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMasterService extends _i1.Mock implements _i21.MasterService {
  @override
  _i6.Future<String?> uploadBook(_i14.BodoBook? book) => (super.noSuchMethod(
        Invocation.method(
          #uploadBook,
          [book],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> uploadAudio(
    String? audioFilePath,
    String? audioName,
    String? bucketId,
    String? bookId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAudio,
          [
            audioFilePath,
            audioName,
            bucketId,
            bookId,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> uploadMusic(
    String? audioFilePath,
    String? audioName,
    String? bucketId,
    String? bookId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadMusic,
          [
            audioFilePath,
            audioName,
            bucketId,
            bookId,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<int?> getPageIndex(String? bookId) => (super.noSuchMethod(
        Invocation.method(
          #getPageIndex,
          [bookId],
        ),
        returnValue: _i6.Future<int?>.value(),
        returnValueForMissingStub: _i6.Future<int?>.value(),
      ) as _i6.Future<int?>);

  @override
  _i6.Future<String?> uploadImage(
    _i16.XFile? image,
    String? bucketId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [
            image,
            bucketId,
          ],
        ),
        returnValue: _i6.Future<String?>.value(),
        returnValueForMissingStub: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<int> getUserIndex() => (super.noSuchMethod(
        Invocation.method(
          #getUserIndex,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<int> getBookIndex() => (super.noSuchMethod(
        Invocation.method(
          #getBookIndex,
          [],
        ),
        returnValue: _i6.Future<int>.value(0),
        returnValueForMissingStub: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<bool> uploadPage(
    String? bookId,
    _i15.BodoBookPage? page,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadPage,
          [
            bookId,
            page,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getPages(
          String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPages,
          [bookId],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Future<bool> setBookLive(String? bookId) => (super.noSuchMethod(
        Invocation.method(
          #setBookLive,
          [bookId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getBooks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBooks,
          [],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i6.Future<bool> deleteBook(String? bookId) => (super.noSuchMethod(
        Invocation.method(
          #deleteBook,
          [bookId],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
}

/// A class which mocks [BookService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookService extends _i1.Mock implements _i22.BookService {
  @override
  _i6.Future<bool> buyBook(
    String? bookId,
    bool? bundle,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #buyBook,
          [
            bookId,
            bundle,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
        returnValueForMissingStub: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>> getAudios(
          String? bookId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAudios,
          [bookId],
        ),
        returnValue:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
        returnValueForMissingStub:
            _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>.empty(),
      ) as _i6.Stream<_i17.QuerySnapshot<Map<String, dynamic>>>);
}
